<Window x:Class="FileSizeCounter.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:model="clr-namespace:FileSizeCounter.Model"
        Title="File Size Inspector" 
        Height="706"
        Width="690" 
        MinHeight="706"
        MinWidth="690" 
        WindowStartupLocation="CenterScreen" 
        Icon="Images/app.png">
    <Window.Resources>
        <ResourceDictionary>
            <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
            <Style BasedOn="{StaticResource NormalTextBlockStyle}" TargetType="TextBlock"/>
        </ResourceDictionary>
    </Window.Resources>

    <!-- Defining menu item shortcuts -->
    <Window.InputBindings>
        <KeyBinding Key="Delete" Command="{Binding DeleteCmd}" />
        <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenInExplorerCmd}" />
    </Window.InputBindings>

    <Grid Name="RootGrid">

        <Grid Name="ContentGrid" Margin="10, 10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <TextBlock Name="DirectoryTextBlock" Text="Inspect Directory:"/>
            <TextBox Grid.Row="0" Grid.Column="1" Name="InspectDirectoryTextBox" Margin="4"
                               Text="{Binding TargetDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                               />

            <Button Grid.Row="0" Grid.Column="2" Name="BrowseButton" Margin="-4,4,4,4"
              Height="{Binding ElementName=InspectDirectoryTextBox, Path=ActualHeight}"
              Click="BrowseButton_OnClick"  
              Content="..."
              HorizontalAlignment="Center" VerticalAlignment="Center" />

            <TextBlock Text="Filter Size (MB):" Grid.Row="1" Grid.Column="0" />

            <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal">
                <TextBox Name="ThresholdValueTextBox" MinWidth="50" MaxWidth="100" 
                         HorizontalAlignment="Left"
                         Text="{Binding SizeFilterValue, ValidatesOnDataErrors=True, UpdateSourceTrigger=LostFocus}" 
                         PreviewTextInput="ThresholdValueTextBox_OnPreviewTextInput"
                         ContextMenu="{x:Null}"
                         CommandManager.PreviewExecuted="ThresholdValueTextBox_OnPreviewExecuted"/>

                <!-- The button is just used to switch the focused control to trigger the property change for SizeFilterValue -->
                <Button Name="RefreshButton" Margin="-4,4,4,4"
                        Height="{Binding ElementName=ThresholdValueTextBox, Path=ActualHeight}">
                    <Button.Content>
                        <Image Source="Images/refresh.png" Width="16" Margin="-10"></Image>
                    </Button.Content>
                </Button>
            </StackPanel>

            <Button Name="StartButton" Grid.Row="0" Grid.Column="3" Grid.RowSpan="2"
            Command="{Binding StartCmd}">
                <Button.Content>
                    <StackPanel Orientation="Horizontal">
                        <Image Source="Images/inspect.png" Width="32" />
                        <TextBlock Text="Start Inspection" />
                    </StackPanel>
                </Button.Content>
            </Button>

            <CheckBox Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2"
                      Content="Hide item(s) smaller than the above filter size" 
                      IsThreeState="False"
                      IsChecked="{Binding HideSmallerElements}"/>

            <CheckBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
                      Content="Highlight item(s) larger than the above filter size" 
                      IsThreeState="False"
                      IsChecked="{Binding HighlightElements}"/>

            <TreeView Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="4" 
                Name="ResultTreeView"
                Margin="4,10,4,4"
                SelectedItemChanged="ResultTreeView_OnSelectedItemChanged"
                ItemsSource="{Binding ElementList}"
                BorderThickness="1"
                Background="{StaticResource ListBoxBackgroundBrush}"
                BorderBrush="{StaticResource ListBoxBorderBrush}"
                Foreground="{StaticResource ForegroundBrush}">

                <!-- TreeViewItem Style -->
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <!-- focus the item when right clicking the mouse -->
                        <EventSetter Event="MouseRightButtonDown" Handler="TreeView_MouseRightButtonDown" />

                        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="Visibility" Value="{Binding IsVisible, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <Setter Property="Background" Value="{StaticResource TransparentBrush}" />
                        <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
                        <Setter Property="FontSize" Value="13.333" />
                        <Setter Property="FontFamily" Value="Segoe UI" />
                        <Setter Property="Padding" Value="6,2" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Margin" Value="0" />
                        <Style.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{StaticResource ListBoxItemSelectedBackgroundBrush}" />
                                <Setter Property="Foreground" Value="Black" />
                                <Setter Property="BorderBrush" Value="{StaticResource ListBoxItemPressedBorderBrush}" />
                                <Setter Property="BorderThickness" Value="2" />
                            </Trigger>
                        </Style.Triggers>
                        <Style.Resources>
                            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{StaticResource Color_026}" Opacity="0.5"/>
                        </Style.Resources>
                    </Style>
                </TreeView.ItemContainerStyle>

                <!-- TreeViewItem Item Template -->
                <!-- Refer to the link http://wpftutorial.net/ContextMenu.html to bind command on a context menu within a template-->
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="model:Element">
                        <StackPanel Orientation="Horizontal" 
                        Tag="{Binding DataContext, RelativeSource={RelativeSource AncestorType={x:Type TreeView}}}">
                            <Image Width="16" Height="16" Margin="3,3,3,3" Source="{Binding ImagePath}" />
                            <TextBlock x:Name="elementNameTextBlock" 
                                       Text="{Binding DisplayString}" >
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=ShouldBeHighlighted}" Value="True">
                                                <Setter Property="Foreground" Value="Red" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <StackPanel.ContextMenu>
                                <ContextMenu DataContext="{Binding Path=PlacementTarget.Tag, RelativeSource={RelativeSource Self}}">
                                    <MenuItem Header="Delete" 
                            InputGestureText="DEL"
                            Command="{Binding DeleteCmd}" >
                                        <MenuItem.Icon>
                                            <Image Source="Images/delete.png" Height="16" Width="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                    <MenuItem Header="Open in Explorer" 
                            InputGestureText="Ctrl+O"
                            Command="{Binding OpenInExplorerCmd}">
                                        <MenuItem.Icon>
                                            <Image Source="Images/open-item.png" Height="16" Width="16" />
                                        </MenuItem.Icon>
                                    </MenuItem>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>

            </TreeView>

            <StatusBar x:Name="ParsingStatusBar" Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="4" Margin="4"
                       Background="Transparent">
                <StatusBar.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                        </Grid>
                    </ItemsPanelTemplate>
                </StatusBar.ItemsPanel>
                <StatusBarItem Grid.Column="0">
                    <Image Width="16" Height="16" ToolTip="{Binding ProcessDetailedErrors}" Source="{Binding ProcessResultIconFile, TargetNullValue={x:Null}}"/>
                </StatusBarItem>
                <StatusBarItem Grid.Column="1">
                    <TextBlock Text="{Binding ProcessResult}" Margin="3" TextWrapping="Wrap"/>
                </StatusBarItem>
            </StatusBar>
        </Grid>
    </Grid>
</Window>
